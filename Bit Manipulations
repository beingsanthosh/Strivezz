#include<bits/stdc++.h>
using namespace std;
#define ll long long 
int main()
{
	// &,|,<<,>>,~,^;
	//>>:decrease===>(n/2powi)
	//<<:increse====>(n*2powi)
	//10===1010
	//&===>11=1,10=0,01=0,00=0
	//|===>11=1,10=1,01=1,00=0 
	//^===>11=0,00=0,10=1,01=1 odd 1=1 even 1=0
	//~===>flip the bits
	// int n=5;
	// int arr[5];
	// for(int i=0;i<5;i++)
	// {
	// 	cin>>arr[i];
	// }
	//=======================================================
	//SWAP operation 
	// int a=5,b=7;
	// a=a^b;
	// b=a^b;
	// a=a^b;
	// 101
	// 111
	// ----
	// 010==2
	// 111
	// ----
	// 101==5
	// 010
	// =====
	// 111==7
	// a=7,b=5
	//=========================================================
	//XOR operations
	// int x=0;
	// for(int i=0;i<5;i++)
	// {
	// 	x=x^arr[i];
	// }
	// cout<<x;
	//=====================================================
	//XOR of 1 to n
	//pattern
	// 1=1
	// 2=3
	// 3=0
	// 4=4
	// 5=1
	// 6=7
	// 7=0
	// 8=8
	// if(n%4==0) return n;
	// if(n%4==1) return 1;
	// if(n%4==2) return n+1;
	// if(n%4==3) return 0;
	///=========================================
	//XOR from L to R
	// 1 t0 6 ==  1^2^3^4^5^6
	// int l,r,x;
	// cin>>l>>r;
	// if(r%4==0)
	// {
	// 	x=r;
	// }
	// else if(r%4==1)
	// {
	// 	x=1;
	// }
	// else if(r%4==2)
	// {
	// 	x=r+1;
	// }
	// else if(r%4==3)
	// {
	// 	x=0;
	// }
	// int k=x^(l-1);
	// cout<<k;
//========================================================
	//EVEN or ODD
	// if(n&1) return odd;
	// else return even;
//================================
	// i th bit set or not =====>(n&(1<<i))
	// set i th bit =====>(n|(1<<i))
	// clear i th bit======>(n&(~(1<<i)))
	// remove last set bit====>(n&(n-1))
	// poer of if(n&(n-1)==0)
	///=============================
	// COUNT SET BITS
	// int n=10;
	// int c=0;
	// while(n)
	// {
	// 	if(n&1) c++;
	// 	n=n>>1;
	// }
	// or
	// while(n)
	// {
	// 	n=n&(n-1);
	// 	c++;
	// }
	//=========================================
	// single number 2
	// int n=6;
	// int arr[6];
	// for(int i=0;i<n;i++)
	// {
	// 	cin>>arr[i];
	// }
	// int x=0,c=0;
	// for(int i=0;i<7;i++)
	// {
	// 	x=x^arr[i];
	// }
	// while(x)
	// {
	// 	if(x&1)
	// 	{
	// 		break;
	// 	}
	// 	c++;
	// }
	// int x1=0,x2=0;
	// for(int i=0;i<n;i++)
	// {
	// 	if(arr[i]&(1<<c))
	// 	{
	// 		x1=x1^arr[i];
	// 	}
	// 	else
	// 	{
	// 		x2=x2^arr[i];
	// 	}
	// }
	// cout<<x1<<" "<<x2;
	//==============================================================
	//power set
	// int n=3;
	// int arr[3];
	// for(int i=0;i<n;i++)
	// {
	// 	cin>>arr[i];
	// }
	// vector<vector<int>>vet;
	// for(int i=0;i<pow(2,3);i++)
	// {
	// 	vector<int>v;
	// 	for(int j=0;j<n;i++)
	// 	{
	// 		if((i&(1<<j)))
	// 		{
	// 			v.push_back(arr[j]);
	// 		}
	// 	}
	// 	vet.push_back(v);
	// 	v.clear();
	// }
	// for(auto i:vet)
	// {
	// 	for(auto k:i)
	// 		{
	// 			cout<<k<<" ";
	// 		}
	// 		cout<<endl;
	// }
}
