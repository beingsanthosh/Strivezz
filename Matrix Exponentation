//recursion
//o(2^n)
// #include<bits/stdc++.h>
// using namespace std;
// int fib(int n)
// {
// 	if(n<=1)
// 	{
// 		return n;
// 	}
// 	else
// 	{
// 		return fib(n-1)+fib(n-2);
// 	}
// }
// int main()
// {
// 	int n;
// 	cin>>n;
// 	cout<<fib(n);
// }
//=============================================
//DP
// #include<bits/stdc++.h>
// using namespace std;
// int fib(int n,vector<int>&dp)
// {
// 	if(n<=1) return n;
// 	else if(dp[n]!=-1) return dp[n];
// 	else dp[n]=fib(n-1,dp)+fib(n-2,dp);
// }
// int main()
// {
// 	int n;
// 	cin>>n;
// 	vector<int>dp(n+1,-1);
// 	cout<<fib(n,dp);
// }//======================
